{"version":3,"sources":["business/choice/index.module.sass","ui/hero/index.module.sass","ui/button/index.module.sass","ui/title/index.module.sass","ui/icon/index.module.sass","ui/button/index.tsx","ui/title/index.tsx","ui/icon/index.tsx","ui/hero/index.tsx","business/choice/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Button","children","onClick","className","style","button","Title","classnames","title","Icon","size","icon","fontSize","Hero","name","address","hero","getMinMax","field","data","min","Math","map","item","max","BooleanOption","activated","low","high","value","onLabelClick","labelText","text","styles","booleanOption","desactivated","label","event","stopPropagation","spacer","IntegerOption","unit","onChange","onLabelOrValueClick","integerOption","slider","type","Number","target","ChoicePage","useState","restaurants","setRestaurants","setHero","buttonText","setButtonText","showSettings","setShowSettings","proximityActivated","setProximityActivated","healthyActivated","setHealthyActivated","costActivated","setCostActivated","lightActivated","setLightActivated","speedActivated","setSpeedActivated","proximity","setProximity","healthy","setHealthy","cost","setCost","light","setLight","speed","setSpeed","proximityBounds","setProximityBounds","costBounds","setCostBounds","speedBounds","setSpeedBounds","useEffect","a","fetch","response","json","bounds","floor","console","error","getData","length","choicePage","places","filter","p","random","getRandomRestaurant","options","option","moreButton","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ebc0de0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"choicePage\":\"choice_choicePage__TDnBS\",\"options\":\"choice_options__cicA1\",\"option\":\"choice_option__1y30d\",\"integerOption\":\"choice_integerOption__25yqC\",\"label\":\"choice_label__3UqBQ\",\"slider\":\"choice_slider__3x7dl\",\"value\":\"choice_value__26YQX\",\"booleanOption\":\"choice_booleanOption___2aPk\",\"spacer\":\"choice_spacer__3ZFGf\",\"desactivated\":\"choice_desactivated__1bv2z\",\"moreButton\":\"choice_moreButton__2b-O4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"hero_hero__1HacR\",\"title\":\"hero_title__2BpIv\",\"address\":\"hero_address__kHGys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2FeG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__3DB2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"icon_icon__37wZI\"};","import React from 'react'\nimport style from './index.module.sass'\n\ninterface Props {\n    children: string,\n    onClick?: () => void\n}\n\nexport const Button = ({ children, onClick }: Props) => {\n    return (\n        <button className={style.button} onClick={onClick}>\n            {children}\n        </button>\n    )\n}","import React from 'react'\nimport style from './index.module.sass'\nimport classnames from 'classnames'\n\ninterface Props {\n    children: string,\n    className?: string\n}\n\nexport const Title = ({ className, children }: Props) => {\n    return <h1 className={classnames(className, style.title)}>{children}</h1>\n}","import React from 'react'\nimport style from './index.module.sass'\n\ninterface Props {\n    size: number,\n    children: string\n}\n\nexport const Icon = ({ size, children }: Props) => {\n    return (\n        <span\n            className={style.icon}\n            style={{\n                fontSize: size\n            }}\n        >\n            {children}\n        </span>\n    )\n}","import React from 'react'\nimport style from './index.module.sass'\nimport { Title } from '../title'\nimport { Icon } from '../icon'\n\nexport interface Props {\n    icon?: string,\n    name: string,\n    address?: string\n}\n\nexport const Hero = ({ icon, name, address }: Props) => {\n    return (\n        <div className={style.hero}>\n            {icon && <Icon size={80}>{icon}</Icon>}\n            <Title className={style.title}>{name}</Title>\n            <span className={style.address}>{address}</span>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../ui/button'\nimport { Hero, Props as HeroProps } from '../../ui/hero'\nimport styles from './index.module.sass'\n\nconst MYJSON_URL = 'https://api.myjson.com/bins/ueanc'\n\nconst getMinMax = (field: string, data: any[]) => {\n    const min = Math.min(...data.map(item => item[field]))\n    const max = Math.max(...data.map(item => item[field]))\n    return { min, max }\n}\n\ninterface Restaurant {\n    name: string;\n    icon: string;\n    address: string;\n    proximity: number;\n    healthy: boolean;\n    cost: number;\n    light: boolean;\n    speed: number;\n}\n\ninterface BooleanOptionProps {\n    className?: string,\n    activated: boolean,\n    low: {\n        text: string,\n        icon: string,\n    },\n    high: {\n        text: string\n        icon: string,\n    },\n    value: boolean,\n    onClick: () => void,\n    onLabelClick: () => void\n}\n\ninterface IntegerOptionProps {\n    className?: string,\n    activated: boolean,\n    low: {\n        text: string,\n    },\n    high: {\n        text: string,\n    },\n    unit: string,\n    min: number,\n    max: number,\n    value: number,\n    onChange: (value: number) => void,\n    onLabelOrValueClick: () => void\n}\n\nconst BooleanOption = ({ activated, low, high, value, onClick, onLabelClick, className }: BooleanOptionProps) => {\n    const labelText = value ? high.text : low.text\n    const icon = value ? high.icon : low.icon\n    return (\n        <div className={classnames(styles.booleanOption, {\n            [styles.desactivated]: !activated\n        }, className)} onClick={onClick}>\n            <div className={styles.label} onClick={event => { event.stopPropagation(); onLabelClick() }}>\n                {labelText}\n            </div>\n            <div className={styles.spacer} />\n            <div className={styles.value}>\n                {`${icon}`}\n            </div>\n        </div>\n    )\n}\n\nconst IntegerOption = ({ activated, low, high, unit, min, max, value, onChange, onLabelOrValueClick, className }: IntegerOptionProps) => {\n    const labelText = value > min + (max - min) / 2 ? high.text : low.text\n    return (\n        <div className={classnames(styles.integerOption, {\n            [styles.desactivated]: !activated\n        }, className)}>\n            <div className={styles.label} onClick={onLabelOrValueClick}>\n                {labelText}\n            </div>\n            <input\n                className={styles.slider}\n                type=\"range\"\n                min={min}\n                max={max}\n                value={value}\n                onChange={event => onChange(Number(event.target.value))}\n            />\n            <div className={styles.value} onClick={onLabelOrValueClick}>\n                {`${value} ${unit}`}\n            </div>\n        </div>\n    )\n}\n\nexport const ChoicePage = () => {\n    const [restaurants, setRestaurants] = useState<Restaurant[]>([])\n    const [hero, setHero] = useState<HeroProps>({ name: 'On mange où ce midi ?', icon: '❓', address: '' })\n    const [buttonText, setButtonText] = useState<string>('Get a choice')\n    const [showSettings, setShowSettings] = useState<boolean>(false)\n\n    // Activations\n    const [proximityActivated, setProximityActivated] = useState<boolean>(false)\n    const [healthyActivated, setHealthyActivated] = useState<boolean>(false)\n    const [costActivated, setCostActivated] = useState<boolean>(false)\n    const [lightActivated, setLightActivated] = useState<boolean>(false)\n    const [speedActivated, setSpeedActivated] = useState<boolean>(false)\n\n    // Settings values\n    const [proximity, setProximity] = useState<number>(0)\n    const [healthy, setHealthy] = useState<boolean>(true)\n    const [cost, setCost] = useState<number>(0)\n    const [light, setLight] = useState<boolean>(false)\n    const [speed, setSpeed] = useState<number>(0)\n\n    // Min and max values\n    const [proximityBounds, setProximityBounds] = useState<{ min: number, max: number }>({ min: 0, max: 0 })\n    const [costBounds, setCostBounds] = useState<{ min: number, max: number }>({ min: 0, max: 0 })\n    const [speedBounds, setSpeedBounds] = useState<{ min: number, max: number }>({ min: 0, max: 0 })\n\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                const response = await fetch(MYJSON_URL)\n                const data = await response.json()\n                setRestaurants(data)\n\n                const bounds = {\n                    proximity: getMinMax('proximity', data),\n                    cost: getMinMax('cost', data),\n                    speed: getMinMax('speed', data)\n                }\n\n                setProximityBounds(bounds.proximity)\n                setCostBounds(bounds.cost)\n                setSpeedBounds(bounds.speed)\n\n                setProximity(Math.floor(bounds.proximity.min + (bounds.proximity.max - bounds.proximity.min) / 2))\n                setCost(Math.floor(bounds.cost.min + (bounds.cost.max - bounds.cost.min) / 2))\n                setSpeed(Math.floor(bounds.speed.min + (bounds.speed.max - bounds.speed.min) / 2))\n            } catch (err) {\n                // TODO Do something with the error\n                console.error(err)\n            }\n        }\n\n        getData()\n    }, [])\n\n    const fakeProximity = {\n        low: {\n            text: 'Proche',\n        },\n        high: {\n            text: 'Loin'\n        },\n        unit: 'mn',\n    }\n\n    const fakeHealthy = {\n        low: {\n            text: 'Gras',\n            icon: '🍟'\n        },\n        high: {\n            text: 'Sain',\n            icon: '🥑'\n        }\n    }\n\n    const fakeCost = {\n        low: {\n            text: 'Cheap',\n        },\n        high: {\n            text: 'Cher'\n        },\n        unit: '€',\n    }\n\n    const fakeLight = {\n        low: {\n            text: 'Rassasiant',\n            icon: '🍗🥔🥔'\n        },\n        high: {\n            text: 'Léger',\n            icon: '🥕'\n        },\n    }\n\n    const fakeSpeed = {\n        low: {\n            text: 'Rapide',\n        },\n        high: {\n            text: 'Long'\n        },\n        unit: 'mn',\n    }\n\n    const getRandomRestaurant = () => {\n        let places: Restaurant[] = restaurants\n        if (proximityActivated) places = places.filter(p => p.proximity <= proximity)\n        if (healthyActivated) places = places.filter(p => p.healthy === healthy)\n        if (costActivated) places = places.filter(p => p.cost <= cost)\n        if (lightActivated) places = places.filter(p => p.light === light)\n        if (speedActivated) places = places.filter(p => p.speed <= speed)\n        if (places.length) {\n            return places[Math.floor(Math.random() * places.length)]\n        } else {\n            return {\n                name: 'Not Found',\n                icon: '🙁',\n                address: \"Essayez avec d'autres paramètres\",\n            }\n        }\n    }\n\n    return restaurants.length\n        ? (\n            <div className={styles.choicePage} >\n                <Hero {...hero} />\n                <Button onClick={() => {\n                    setHero(getRandomRestaurant())\n                    setButtonText('Get another')\n                }}>{buttonText}</Button>\n                {\n                    showSettings && (\n                        <div className={styles.options}>\n                            <IntegerOption className={styles.option} {...fakeProximity} {...proximityBounds} value={proximity} onChange={value => { setProximity(value); setProximityActivated(true) }} activated={proximityActivated} onLabelOrValueClick={() => setProximityActivated(!proximityActivated)} />\n                            <BooleanOption className={styles.option} {...fakeHealthy} value={healthy} onClick={() => { if (healthyActivated) setHealthy(!healthy); setHealthyActivated(true) }} activated={healthyActivated} onLabelClick={() => setHealthyActivated(!healthyActivated)} />\n                            <IntegerOption className={styles.option} {...fakeCost} {...costBounds} value={cost} onChange={value => { setCost(value); setCostActivated(true) }} activated={costActivated} onLabelOrValueClick={() => setCostActivated(!costActivated)} />\n                            <BooleanOption className={styles.option} {...fakeLight} value={light} onClick={() => { if (lightActivated) setLight(!light); setLightActivated(true) }} activated={lightActivated} onLabelClick={() => setLightActivated(!lightActivated)} />\n                            <IntegerOption className={styles.option} {...fakeSpeed} {...speedBounds} value={speed} onChange={value => { setSpeed(value); setSpeedActivated(true) }} activated={speedActivated} onLabelOrValueClick={() => setSpeedActivated(!speedActivated)} />\n                        </div>\n                    )\n                }\n                <button className={styles.moreButton} onClick={() => setShowSettings(!showSettings)}></button>\n            </div >\n        )\n        : null\n}","import React from 'react'\nimport './App.sass'\nimport { ChoicePage } from './business/choice'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ChoicePage />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}